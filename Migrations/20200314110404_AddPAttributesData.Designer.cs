// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechShop.Data;

namespace TechShop.Migrations
{
    [DbContext(typeof(TechDbContext))]
    [Migration("20200314110404_AddPAttributesData")]
    partial class AddPAttributesData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TechShop.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Asus"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Acer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 5,
                            Name = "HP"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Lenovo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Epson"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sony"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("TechShop.Models.Breadcrumb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breadcrumb");
                });

            modelBuilder.Entity("TechShop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Lft")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Rgt")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Level = 0,
                            Lft = 1,
                            Name = "Categories",
                            ParentId = 0,
                            Rgt = 38,
                            Url = ""
                        },
                        new
                        {
                            Id = 2,
                            Level = 1,
                            Lft = 2,
                            Name = "Computers and laptops",
                            ParentId = 1,
                            Rgt = 7,
                            Url = "computers-and-laptops"
                        },
                        new
                        {
                            Id = 3,
                            Level = 2,
                            Lft = 3,
                            Name = "Laptops",
                            ParentId = 2,
                            Rgt = 6,
                            Url = "laptops"
                        },
                        new
                        {
                            Id = 4,
                            Level = 3,
                            Lft = 4,
                            Name = "All Laptops",
                            ParentId = 3,
                            Rgt = 5,
                            Url = "all-laptops"
                        },
                        new
                        {
                            Id = 5,
                            Level = 1,
                            Lft = 8,
                            Name = "Photo and video",
                            ParentId = 1,
                            Rgt = 17,
                            Url = "photo-and-video"
                        },
                        new
                        {
                            Id = 6,
                            Level = 2,
                            Lft = 9,
                            Name = "Cameras",
                            ParentId = 5,
                            Rgt = 10,
                            Url = "cameras"
                        },
                        new
                        {
                            Id = 7,
                            Level = 2,
                            Lft = 11,
                            Name = "Lenses, optics, flashes",
                            ParentId = 5,
                            Rgt = 16,
                            Url = "lenses-optics-flashes"
                        },
                        new
                        {
                            Id = 8,
                            Level = 3,
                            Lft = 12,
                            Name = "Lenses",
                            ParentId = 7,
                            Rgt = 15,
                            Url = "lenses"
                        },
                        new
                        {
                            Id = 9,
                            Level = 1,
                            Lft = 18,
                            Name = "TVs, audio, video",
                            ParentId = 1,
                            Rgt = 27,
                            Url = "tvs-audio-video"
                        },
                        new
                        {
                            Id = 10,
                            Level = 2,
                            Lft = 19,
                            Name = "TVs",
                            ParentId = 9,
                            Rgt = 26,
                            Url = "tvs"
                        },
                        new
                        {
                            Id = 11,
                            Level = 3,
                            Lft = 20,
                            Name = "All TVs",
                            ParentId = 10,
                            Rgt = 21,
                            Url = "all-tvs"
                        },
                        new
                        {
                            Id = 12,
                            Level = 3,
                            Lft = 22,
                            Name = "Smart-TVs",
                            ParentId = 10,
                            Rgt = 23,
                            Url = "smart-tvs"
                        },
                        new
                        {
                            Id = 13,
                            Level = 3,
                            Lft = 24,
                            Name = "OLED TVs",
                            ParentId = 10,
                            Rgt = 25,
                            Url = "oled-tvs"
                        },
                        new
                        {
                            Id = 14,
                            Level = 1,
                            Lft = 28,
                            Name = "Smartphones and gadgets",
                            ParentId = 1,
                            Rgt = 37,
                            Url = "smartphones-and-gadgets"
                        },
                        new
                        {
                            Id = 15,
                            Level = 2,
                            Lft = 29,
                            Name = "Smartphones",
                            ParentId = 14,
                            Rgt = 32,
                            Url = "smartphones"
                        },
                        new
                        {
                            Id = 16,
                            Level = 3,
                            Lft = 30,
                            Name = "All Smartphones",
                            ParentId = 15,
                            Rgt = 31,
                            Url = "all-smartphones"
                        },
                        new
                        {
                            Id = 17,
                            Level = 2,
                            Lft = 33,
                            Name = "Tablets",
                            ParentId = 14,
                            Rgt = 36,
                            Url = "tablets"
                        },
                        new
                        {
                            Id = 18,
                            Level = 3,
                            Lft = 34,
                            Name = "All Tablets",
                            ParentId = 17,
                            Rgt = 35,
                            Url = "all-tablets"
                        });
                });

            modelBuilder.Entity("TechShop.Models.CategoryProduct", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            CategoryId = 4,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 18,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 5
                        });
                });

            modelBuilder.Entity("TechShop.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("TechShop.Models.PAVPair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int?>("PAttributeId")
                        .HasColumnType("int");

                    b.Property<int?>("PValueId")
                        .HasColumnType("int");

                    b.Property<int>("ValueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PAttributeId");

                    b.HasIndex("PValueId");

                    b.ToTable("PAVPair");
                });

            modelBuilder.Entity("TechShop.Models.PAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("PAttribute");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "RAM"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hard Drive"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Display Size"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Display Resolution"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Processor Type"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Number of CPU Cores"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Operating System"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Graphics Type"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Graphics Processor"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Graphics Brand"
                        });
                });

            modelBuilder.Entity("TechShop.Models.PValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("PValue");
                });

            modelBuilder.Entity("TechShop.Models.PriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceHistory");
                });

            modelBuilder.Entity("TechShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Description = "[Intel Celeron J4005, 2x2000 MGz, 4 GB DDR3, SSD 120 GB, without OS]",
                            Img = "/img/product01.png",
                            Name = "Laptop ASUS Air G3425",
                            Rating = 5m
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 6,
                            Description = "[Intel Celeron J4005, 2x2000 MGz, 4 GB DDR3, SSD 120 GB, Windows 10]",
                            Img = "/img/product01.png",
                            Name = "Laptop Lenovo C1124",
                            Rating = 0m
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            Description = "[i5, 1.8/8Gb/128SSD, (MQD32RU/A)]",
                            Img = "/img/product03.png",
                            Name = "Laptop Mackbook Air 2",
                            Rating = 3m
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 8,
                            Description = "[1920x1200, IPS, 8х2.36 GGz, 3 GB, BT, GPS, 5100 mAh, Android 8.x+]",
                            Img = "/img/product04.png",
                            Name = "Tablet Sony Z3",
                            Rating = 4m
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 7,
                            Description = "[5.1, Closed-Back, 20 Gz - 25000 Gz, 35Ω, wired, cable - 2 m, black]",
                            Img = "/img/product05.png",
                            Name = "Headphones Epson GT23",
                            Rating = 5m
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            Description = "[Intel Celeron J4005, 2x2000 MGz, 4 GB DDR3, SSD 120 GB, without OS]",
                            Img = "/img/product06.png",
                            Name = "Laptop Acer H2451",
                            Rating = 4m
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 1,
                            Description = "[Intel Celeron J4005, 2x2000 MGz, 6 GB DDR3, SSD 120 GB, without OS]",
                            Img = "/img/product07.png",
                            Name = "Laptop ASUS Air G3425",
                            Rating = 1m
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 1,
                            Description = "[Intel Celeron J4005, 2x4000 MGz, 8 GB DDR3, SSD 120 GB, Windows 10]",
                            Img = "/img/product08.png",
                            Name = "Laptop ASUS Air G5161",
                            Rating = 2m
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 1,
                            Description = "[Intel Celeron J4005, 2x2000 MGz, 16 GB DDR3, SSD 1 TB, Windows 10]",
                            Img = "/img/product09.png",
                            Name = "Laptop ASUS Air G9515",
                            Rating = 3m
                        });
                });

            modelBuilder.Entity("TechShop.Models.ProductPAVPair", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("AVPairId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "AVPairId");

                    b.HasIndex("AVPairId");

                    b.ToTable("ProductPAVPair");
                });

            modelBuilder.Entity("TechShop.Models.CategoryProduct", b =>
                {
                    b.HasOne("TechShop.Models.Category", "Category")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechShop.Models.Product", "Product")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechShop.Models.Discount", b =>
                {
                    b.HasOne("TechShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechShop.Models.PAVPair", b =>
                {
                    b.HasOne("TechShop.Models.PAttribute", "PAttribute")
                        .WithMany()
                        .HasForeignKey("PAttributeId");

                    b.HasOne("TechShop.Models.PValue", "PValue")
                        .WithMany()
                        .HasForeignKey("PValueId");
                });

            modelBuilder.Entity("TechShop.Models.PriceHistory", b =>
                {
                    b.HasOne("TechShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechShop.Models.Product", b =>
                {
                    b.HasOne("TechShop.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechShop.Models.ProductPAVPair", b =>
                {
                    b.HasOne("TechShop.Models.PAVPair", "PAVPair")
                        .WithMany()
                        .HasForeignKey("AVPairId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechShop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
